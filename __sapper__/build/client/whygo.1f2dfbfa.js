import{S as e,i as t,s as a,e as n,t as s,a as o,c as i,b as r,g as c,d as h,f as l,j as u,h as d,k as f,l as p,n as y}from"./client.ab25ec6c.js";function g(e){let t,a,g,m,b,v,w,E,M,I,L,R,j,k,G,T,A,S,W,x,P,B,D,C,O,H,U,V,q,z,F,J,K,N,Q,X,Y,Z="type Guitarist struct{Guitarist } //object\n\nfunc(m Musician) Run(){} // method\n\ntype Musician interface { Run()} //interface that uses the method\n",$='func Service(Musician){ //param is an interface "Type" not an object or just an interface\n    fmt.Println(Musician)\n}\n',_="\n//you can embed the interface type into the struct\ntype Guitarist struct{\n    Musician\n}\n";return{c(){t=n("h3"),a=s("I Love Go because of it's simplicity."),g=o(),m=n("br"),b=o(),v=n("div"),w=s("I Love Go because of it's simplicity.\n"),E=n("p"),M=s("What does this mean? I am referring to it's api and it's ability to uncouple code.\nWhy is this important? Many developers are bound to the constraints\nto their language and tech stack.  The point is so that when your \nproject gets bigger you are not constrained to what you have already\ncreated.  \n"),I=n("br"),L=s("\nAn example of what I am referring to."),R=o(),j=n("pre"),k=n("code"),G=s(Z),T=s("\n\n\nThe three bits of code that are stated are pretty simple.\nbut they are the building blocks to uncoupling code.\n"),A=n("ul"),S=n("li"),W=s("1. struct"),x=o(),P=n("li"),B=s("2. method"),D=o(),C=n("li"),O=s("3. interface"),H=s("\n\n\nLets say you are building a Service on Musican.\n"),U=n("pre"),V=n("code"),q=s($),z=s("\nMeaning...."),F=n("br"),J=s("\nWe used the interface Musician to allow for any struct with run() to be passed in.\nA lot of poeple miss this point when seeing the word interface because of it's\ndifferent meaning in other languages.  \n\nThis allows for not having to think about your data or concrete data type.\nSomething many languages you are tied to.\n\n"),K=n("br"),N=s("\nAnother thing a lot of people miss from other languages is that you can do embedding \non this interface type.\n\n"),Q=n("pre"),X=n("code"),Y=s(_),this.h()},l(e){t=i(e,"H3",{style:!0});var n=r(t);a=c(n,"I Love Go because of it's simplicity."),n.forEach(h),g=l(e),m=i(e,"BR",{}),b=l(e),v=i(e,"DIV",{class:!0});var s=r(v);w=c(s,"I Love Go because of it's simplicity.\n"),E=i(s,"P",{});var o=r(E);M=c(o,"What does this mean? I am referring to it's api and it's ability to uncouple code.\nWhy is this important? Many developers are bound to the constraints\nto their language and tech stack.  The point is so that when your \nproject gets bigger you are not constrained to what you have already\ncreated.  \n"),I=i(o,"BR",{}),L=c(o,"\nAn example of what I am referring to."),o.forEach(h),R=l(s),j=i(s,"PRE",{class:!0});var u=r(j);k=i(u,"CODE",{class:!0});var d=r(k);G=c(d,Z),d.forEach(h),u.forEach(h),T=c(s,"\n\n\nThe three bits of code that are stated are pretty simple.\nbut they are the building blocks to uncoupling code.\n"),A=i(s,"UL",{});var f=r(A);S=i(f,"LI",{});var p=r(S);W=c(p,"1. struct"),p.forEach(h),x=l(f),P=i(f,"LI",{});var y=r(P);B=c(y,"2. method"),y.forEach(h),D=l(f),C=i(f,"LI",{});var ee=r(C);O=c(ee,"3. interface"),ee.forEach(h),f.forEach(h),H=c(s,"\n\n\nLets say you are building a Service on Musican.\n"),U=i(s,"PRE",{class:!0});var te=r(U);V=i(te,"CODE",{class:!0});var ae=r(V);q=c(ae,$),ae.forEach(h),te.forEach(h),z=c(s,"\nMeaning...."),F=i(s,"BR",{}),J=c(s,"\nWe used the interface Musician to allow for any struct with run() to be passed in.\nA lot of poeple miss this point when seeing the word interface because of it's\ndifferent meaning in other languages.  \n\nThis allows for not having to think about your data or concrete data type.\nSomething many languages you are tied to.\n\n"),K=i(s,"BR",{}),N=c(s,"\nAnother thing a lot of people miss from other languages is that you can do embedding \non this interface type.\n\n"),Q=i(s,"PRE",{class:!0});var ne=r(Q);X=i(ne,"CODE",{class:!0});var se=r(X);Y=c(se,_),se.forEach(h),ne.forEach(h),s.forEach(h),this.h()},h(){u(t,"text-decoration","underline"),d(k,"class","svelte-p8wa68"),d(j,"class","svelte-p8wa68"),d(V,"class","svelte-p8wa68"),d(U,"class","svelte-p8wa68"),d(X,"class","svelte-p8wa68"),d(Q,"class","svelte-p8wa68"),d(v,"class","body svelte-p8wa68")},m(e,n){f(e,t,n),p(t,a),f(e,g,n),f(e,m,n),f(e,b,n),f(e,v,n),p(v,w),p(v,E),p(E,M),p(E,I),p(E,L),p(v,R),p(v,j),p(j,k),p(k,G),p(v,T),p(v,A),p(A,S),p(S,W),p(A,x),p(A,P),p(P,B),p(A,D),p(A,C),p(C,O),p(v,H),p(v,U),p(U,V),p(V,q),p(v,z),p(v,F),p(v,J),p(v,K),p(v,N),p(v,Q),p(Q,X),p(X,Y)},p:y,i:y,o:y,d(e){e&&h(t),e&&h(g),e&&h(m),e&&h(b),e&&h(v)}}}export default class extends e{constructor(e){super(),t(this,e,null,g,a,{})}}
